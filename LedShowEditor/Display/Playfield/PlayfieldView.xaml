<UserControl
    x:Class="LedShowEditor.Display.Playfield.PlayfieldView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:converters="clr-namespace:LedShowEditor.Converters"
        xmlns:playfield="clr-namespace:LedShowEditor.Display.Playfield">
        <UserControl.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:MathConverter x:Key="MathConverter" />
            <Style x:Key="FlatButton" TargetType="Button">
                <Setter Property="Control.Background" Value="{x:Null}" />
                <Setter Property="Control.BorderBrush" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            >
                                <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="true">
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Control.FontWeight" Value="Bold" />
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="true">
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver" Value="True">
                        <Setter Property="Control.Background" Value="{DynamicResource AccentColorBrush}" />
                        <Setter Property="Control.BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </UserControl.Resources>
    <Grid
        Margin="10,20,10,20"
        x:Name="DevicesContainer"
        >
        <Image
            
            Source="{Binding PlayfieldImage}" 
            Stretch="Uniform"
            converters:SizeObserver.Observe="True"
            converters:SizeObserver.ObservedHeight="{Binding PlayfieldHeight, Mode=OneWayToSource}"
            converters:SizeObserver.ObservedWidth="{Binding PlayfieldWidth, Mode=OneWayToSource}"
            ></Image>



        <!-- Container for the Leds -->
        <ItemsControl 
            ItemsSource="{Binding LedsVm.AllLeds}"
            Visibility="{Binding AllLedsVis, Converter={StaticResource BooleanToVisibilityConverter}}"
            >
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas 
                        Width="{Binding PlayfieldWidth}"
                        Height="{Binding PlayfieldHeight}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Canvas.Left">
                        <Setter.Value>
                            <MultiBinding 
                                Converter="{StaticResource MathConverter}" 
                                ConverterParameter="x*y">
                                <Binding Path="LocationX"/>
                                <Binding Path="DataContext.ScaleFactorX" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type playfield:PlayfieldView}}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter
                Property="Canvas.Top">
                        <Setter.Value>
                            <MultiBinding 
                                Converter="{StaticResource MathConverter}" 
                                ConverterParameter="x*y">
                                <Binding Path="LocationY"/>
                                <Binding Path="DataContext.ScaleFactorY" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type playfield:PlayfieldView}}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid
                        Width="30" 
                        Height="30" 
                        Opacity="0.9"
                        Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                        cal:Message.Attach="[Event MouseDown] = [Action MouseDown($source)];
                        [Event MouseMove] = [Action MouseMove($source)];
                        [Event MouseEnter] = [Action MouseEnter($source)];
                        [Event MouseLeave] = [Action MouseLeave($source)]"
                        >
                       <!-- <Ellipse 
                            Width="30"
                            Height="30"
                            Fill="OrangeRed"
                            Stroke="CadetBlue"
                            StrokeThickness="2"
                            >
                           
                            <Ellipse.Effect>
                                <DropShadowEffect
                                ShadowDepth="0" 
                                Color="{DynamicResource AccentColor}" 
                                BlurRadius="20"
                               
                                >
                                </DropShadowEffect>
                            </Ellipse.Effect>
                            
                        </Ellipse>-->
                        <Path 
                            Fill="OrangeRed"
                            Stroke="CadetBlue"
                            StrokeThickness="2"
                            Data="{Binding LedGeometry}"></Path>
                        <!--<Border
                            BorderBrush="CadetBlue"
                            BorderThickness="2"
                            />-->
                        <!-- Highlight for object selection -->
                     <!--  <Grid
                            Width="30" 
                            Height="30"
                            Background="IndianRed"
                            Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Margin="-2"
                            >
                            <Border
                            BorderBrush="{DynamicResource AccentColorBrush}"
                            BorderThickness="2"
                            />
                            <Grid.Effect
                            >
                                <DropShadowEffect
                                ShadowDepth="0" 
                                Color="{DynamicResource AccentColor}" 
                                BlurRadius="20"
                                >
                                </DropShadowEffect>
                            </Grid.Effect>
                        </Grid>-->
                        <!--<Button 
                            Content="{Binding Id}"
                            Style="{StaticResource FlatButton}"
                            cal:Message.Attach="ActivateDeviceState()"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontSize="14"
                            />-->

                    </Grid>

                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>