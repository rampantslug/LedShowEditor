<UserControl
    x:Class="LedShowEditor.Display.Timeline.TimelineView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:converters="clr-namespace:LedShowEditor.Converters">
    <UserControl.Resources>       
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.listview.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:MathConverter x:Key="MathConverter" />
            <Style x:Key="AdvancedListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MetroListViewItem}">
                <Setter Property="IsSelected" Value="{Binding LinkedLed.IsSelected, Mode=TwoWay}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            </Style>
            <Style 
            x:Key="PlayPauseIcon" 
            TargetType="{x:Type Rectangle}">
                <!-- Default (when Playing = False) -->
                <Style.Triggers>
                    <DataTrigger 
                    Binding="{Binding Path=LedsVm.IsPlaying}" Value="False">
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <TextBlock Text="Play"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="OpacityMask">
                            <Setter.Value>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_control_play}" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <!-- When Playing = True -->
                    <DataTrigger Binding="{Binding Path=LedsVm.IsPlaying}" Value="True">
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <TextBlock Text="Pause"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="OpacityMask">
                            <Setter.Value>
                                <VisualBrush Stretch="Uniform" Visual="{DynamicResource appbar_control_pause}" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid
        Margin="5"
        >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <TextBlock 
            Grid.Column="0"
            Grid.Row="0"
            Text="{Binding LedsVm.SelectedShow.Name}"
            VerticalAlignment="Center"
            Margin="20,0,0,0"            
            Foreground="{StaticResource AccentColorBrush}"
            FontSize="26"
            
            />

        <!-- List of Leds used in this show-->
        <ListView
            Grid.Column="0"
            Grid.Row="1"
            ItemsSource="{Binding LedsVm.SelectedShow.Leds}"
            Background="Transparent"
            ItemContainerStyle="{StaticResource AdvancedListViewItemStyle}"
            >          
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <TextBlock 
                            Text="{Binding LinkedLed.Name}"
                            VerticalAlignment="Center"
                            />
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem 
                                    Header="Delete from show" 
                                    cal:Message.Attach="DeleteLedFromShow()"                                   
                                    />
                                <MenuItem 
                                    Header="Duplicate led events" 
                                    cal:Message.Attach="DuplicateLedEvents()"                                   
                                    />                               
                            </ContextMenu>
                        </Grid.ContextMenu>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
        </ListView>
        
        
        <!-- Timeline view of led colours -->
        <ListView
            Grid.Column="1"
            Grid.ColumnSpan="3"
            Grid.Row="1"
            ItemsSource="{Binding LedsVm.SelectedShow.Leds}"
            Background="Transparent"
            >
            <ItemsControl.ItemTemplate>
                <DataTemplate>                   
                    <Grid>
                        <ItemsControl
                            ItemsSource="{Binding Events}"
                            >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Canvas.Left" Value="{Binding StartFrame, Converter={StaticResource MathConverter}, ConverterParameter=x*5}"/>
                                    <Setter Property="Canvas.Top" Value="0" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                   <Rectangle
                                       Fill="{Binding EventColor}"
                                       Height="25"
                                       Width="{Binding EventLength, Converter={StaticResource MathConverter}, ConverterParameter=x*5}"
                                       />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ListView>
        <Canvas
            Grid.Column="1"
            Grid.ColumnSpan="3"
            Grid.Row="1"           
            >
            
            <Rectangle
                Height="200"
                Width="1"
                Fill="{StaticResource AccentColorBrush}"
                Canvas.Top="0"
                Canvas.Left="{Binding LedsVm.CurrentFrame, Converter={StaticResource MathConverter}, ConverterParameter=x*5}"
                ></Rectangle>
        </Canvas>
        
        
        <StackPanel 
            Grid.Row="0"
            Grid.Column="2"
            Orientation="Horizontal"
            Height="30"
            >
            <Button 
                x:Name="FirstFrame"
                Style="{DynamicResource MetroCircleButtonStyle}"
                Height="30"
                Width="30"
                ToolTip="First Frame"
                >
              <Rectangle 
                    Width="10"
                    Height="8"
                    Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Fill"
                                     Visual="{DynamicResource appbar_control_rewind}" />
                </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
           
            <TextBox 
                Text="{Binding LedsVm.CurrentFrame}"
                Width="50"
                Height="20"
                HorizontalContentAlignment="Right"
                />
            <Button 
                x:Name="PlayPause"
                Style="{DynamicResource MetroCircleButtonStyle}"
                Height="30"
                Width="30"
                 >
                <Rectangle 
                    Width="8"
                    Height="8"
                    Style="{StaticResource PlayPauseIcon}"
                    Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">                
                </Rectangle>
            </Button>
            <Button 
                x:Name="Step"
                Style="{DynamicResource MetroCircleButtonStyle}"
                Height="30"
                Width="30"
                ToolTip="Step 1 Frame"
                 >
                <Rectangle 
                    Width="10"
                    Height="8"
                    Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                                     Visual="{DynamicResource appbar_control_resume}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button 
                x:Name="LastFrame"
                Style="{DynamicResource MetroCircleButtonStyle}"
                Height="30"
                Width="30"
                ToolTip="Last Frame"
                 >
                <Rectangle 
                    Width="10"
                    Height="8"
                    Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                                     Visual="{DynamicResource appbar_control_fastforward}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </StackPanel>
        
    </Grid>

</UserControl>